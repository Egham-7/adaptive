[project]
name = "adaptive-ai"
version = "0.1.0"
description = "Intelligent LLM Infrastructure with Smart Model Selection"
authors = [{ name = "Your Name", email = "you@example.com" }]
requires-python = ">=3.10,<4.0"
readme = "README.md"
license = "MIT"
keywords = ["llm", "ai", "model-selection", "machine-learning", "adaptive"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = [
  "fastapi>=0.104.0,<1.0",
  "hypercorn>=0.17.0,<1.0",
  "pydantic>=2.11.5,<3",
  "pydantic-settings>=2.9.1,<3",
  "requests>=2.31.0,<3",
  "pyyaml>=6.0.2,<7",
  "langchain>=0.3.26,<0.4",
  "langchain-core>=0.3.66,<0.4",
  "cachetools>=5.3.0,<7",
  "openai>=1.97.1",
  "pytest>=8.4.1",
  "pytest-cov>=6.2.1",
  "pytest-asyncio>=0.24.0",
  "httpx>=0.25.0,<1.0",
  "aiohttp>=3.8.0,<4.0",
  "python-jose[cryptography]>=3.3.0,<4.0",
  "types-pyyaml>=6.0.12.20250516",
  "types-python-jose>=3.5.0.20250531",
  "ruff>=0.11.13",
  "black>=25.1.0",
  "python-json-logger>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/your-org/adaptive-ai"
Repository = "https://github.com/your-org/adaptive-ai"
Documentation = "https://docs.adaptive-ai.com"
"Bug Tracker" = "https://github.com/your-org/adaptive-ai/issues"
Changelog = "https://github.com/your-org/adaptive-ai/blob/main/CHANGELOG.md"


[dependency-groups]
dev = [
  "mypy>=1.15.0,<2",
  "black>=25.1.0,<26",
  "ruff>=0.11.11,<0.13",
  "types-requests>=2.32.0.20250611,<3",
  "types-pyyaml>=6.0.12.20250516,<7",
  "types-cachetools>=5.3.0,<7",
  "types-python-jose>=3.5.0.20250531",
]
test = ["pytest>=8.4.1,<9", "pytest-cov>=6.2.1,<7"]
docs = ["mkdocs>=1.5.0,<2", "mkdocs-material>=9.0.0,<10"]

[tool.uv]
default-groups = []

[tool.hatch.build.targets.sdist]
include = ["adaptive_ai"]

[tool.hatch.build.targets.wheel]
include = ["adaptive_ai"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP", "N", "S", "T20", "RUF"]
ignore = ["E501", "B008", "C901", "S101", "T201"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101", "S105", "S106"]

[tool.ruff.lint.isort]
known-first-party = ["adaptive_ai"]
force-sort-within-sections = true

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
show_error_codes = true
follow_imports = "silent"
# Exclude test files by default - tests can be checked separately  
exclude = [
  "tests/",
  "benchmarks",
  "analysis",
  "adaptive-app",
  "adaptive-backend",
  "adaptive-docs",
  "model_data/agent",
  "model_data/update_from_helicone.py",
]

[[tool.mypy.overrides]]
module = [
  "pydantic.*",
  "pydantic_settings.*",
  "langchain_core.*",
  "hypercorn.*",
  "fastapi.*",
  "httpx.*",
  "pythonjsonlogger.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
  "integration: marks tests as integration tests (requiring running service)",
  "unit: marks tests as unit tests (no external dependencies)",
  "asyncio: marks tests as async tests",
]
addopts = "-v --strict-markers"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
