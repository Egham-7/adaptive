services:
  frontend:
    build:
      context: ./adaptive-frontend
      dockerfile: Dockerfile
      args:
        - VITE_CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLISHABLE_KEY}
        - VITE_BASE_API_URL=${VITE_BASE_API_URL}
    env_file:
      - ./adaptive-frontend/.env.local
    ports:
      - "3000:3000"
    depends_on:
      - backend-go
      - backend-python
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  backend-go:
    build:
      context: ./adaptive-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend-python
    env_file:
      - ./adaptive-backend/.env.local
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 10s

  backend-python:
    build:
      context: ./adaptive_ai
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file: ./adaptive_ai/.env.local
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
