services:
  frontend:
    build:
      context: ./adaptive-frontend
      dockerfile: Dockerfile
      args:
        - VITE_CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLISHABLE_KEY}
        - VITE_BASE_API_URL=${VITE_BASE_API_URL}
    environment:
      - PORT=3000
      - VITE_BASE_API_URL=${VITE_BASE_API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend-go
      - backend-python
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  backend-go:
    build:
      context: ./adaptive-backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - ADDR=:8080
      - ADAPTIVE_AI_BASE_URL=http://backend-python:8000
      - ALLOWED_ORIGINS=http://localhost:3000

    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 10s

  backend-python:
    build:
      context: ./adaptive_ai
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s

networks:
  app-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
