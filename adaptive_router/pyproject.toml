[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "adaptive-router"
version = "0.1.0"
description = "Intelligent LLM Infrastructure with Smart Model Selection"
authors = [{ name = "Botir Khaltaev", email = "botirkhaltaev@llmadaptive.uk" }]
requires-python = ">=3.10,<4.0"
readme = "README.md"
license = "MIT"
keywords = ["llm", "ai", "model-selection", "machine-learning", "adaptive"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = [
  # Data Validation
  "pydantic>=2.11.5,<3",
  "pydantic-settings>=2.0.0,<3",
  # ML Framework & Models
  "torch>=2.2.0,<2.3.0", # Limited to 2.2.x for Intel macOS x86_64 compatibility
  "transformers>=4.44.0,<4.45", # Pin to 4.44.x for macOS compatibility with sentence-transformers
  "huggingface-hub>=0.32.0,<1.0",
  "numpy>=1.24.0,<2.0", # torch 2.2.x requires NumPy 1.x
  "accelerate>=1.8.1,<2",
  # UniRouter ML Dependencies
  "sentence-transformers>=2.7.0,<3", # Pin to 2.x for macOS compatibility with transformers 4.44
  "scikit-learn>=1.5.0,<2",
  # LLM Integration
  "langchain>=0.3.26,<0.4",
  "langchain-core>=0.3.66,<0.4",
  "langchain-openai>=0.3.0,<0.4",
  "langchain-anthropic>=0.3.0,<0.4",
  "langchain-groq>=0.3.0,<0.4",
  "langchain-google-genai>=2.0.0,<3",
  "openai>=1.97.1",
  "anthropic>=0.39.0",
  "groq>=0.11.0",
  # Evaluation Dependencies
  "tqdm>=4.66.0,<5",
  # Utilities
  "pyyaml>=6.0.2,<7",
  "python-dotenv>=1.0.0,<2",
  "fastapi>=0.118.2",
  "hypercorn>=0.17.0,<1.0",
  "cachetools>=5.3.0,<7",
  "python-json-logger>=3.3.0",
  "datasets>=4.2.0",
  # S3 Storage
  "boto3>=1.34.0,<2",
]

[project.urls]
Homepage = "https://llmadaptive.uk"
Repository = "https://github.com/Egham-7/adaptive"
Documentation = "https://docs.llmadaptive.uk"
"Bug Tracker" = "https://github.com/Egham-7/adaptive/issues"

[project.scripts]
adaptive-router = "adaptive_router.cli:main"


[dependency-groups]
dev = [
  "mypy>=1.15.0,<2",
  "black>=25.1.0,<26",
  "ruff>=0.11.11,<0.14",
  "types-pyyaml>=6.0.12.20250516,<7",
  "types-pyjwt>=1.7.1",
  "pytest>=8.4.1",
  "pytest-cov>=6.2.1",
  "pytest-asyncio>=0.26.0",
]
test = ["pytest>=8.4.1,<9", "pytest-cov>=6.2.1,<8", "pytest-asyncio>=0.24.0,<1"]
docs = ["mkdocs>=1.5.0,<2", "mkdocs-material>=9.0.0,<10"]
# Optional: Data enrichment tools (model_data/agent)
enrichment = [
  "langchain>=0.3.26,<0.4",
  "langchain-core>=0.3.66,<0.4",
  "openai>=1.97.1",
  "requests>=2.31.0,<3",
  "cachetools>=5.3.0,<7",
  "types-requests>=2.32.0.20250611,<3",
  "types-cachetools>=5.3.0,<7",
]
sync = [
  "asyncpg>=0.30.0",
  "httpx>=0.28.1",
  "polars>=1.34.0",
  "sqlalchemy>=2.0.43",
]


[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''


[tool.mypy]
exclude = [
  "model_data/",
  "tests/",
  "scripts/models/",
]
no_implicit_optional = true
warn_return_any = false
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  "pydantic.*",
  "pydantic_settings.*",
  "langchain.*",
  "langchain_core.*",
  "langchain_openai.*",
  "langchain_anthropic.*",
  "langchain_groq.*",
  "langchain_google_genai.*",
  "hypercorn.*",
  "fastapi.*",
  "httpx.*",
  "pythonjsonlogger.*",
  "langgraph.*",
  "transformers.*",
  "torch.*",
  "huggingface_hub.*",
  "accelerate.*",
  "pytest.*",
  "sentence_transformers.*",
  "sklearn.*",
  "datasets.*",
  "tqdm.*",
  "polars.*",
  "rich.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
markers = [
  "integration: marks tests as integration tests (requiring running service)",
  "unit: marks tests as unit tests (no external dependencies)",
  "asyncio: marks tests as async tests",
  "slow: marks tests as slow tests (ML model loading, training, etc.)",
]
addopts = "-v --strict-markers"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
