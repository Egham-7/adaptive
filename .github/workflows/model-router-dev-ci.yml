name: Model Router Dev CI/CD

on:
  push:
    branches: [dev]
    paths:
      - "adaptive_router/**"
      - ".github/workflows/model-router-dev-ci.yml"
      - ".github/scripts/**"
  pull_request:
    branches: [dev]
    paths:
      - "adaptive_router/**"
      - ".github/workflows/model-router-dev-ci.yml"
      - ".github/scripts/**"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"
  WORKING_DIR: "./adaptive_router"

jobs:
  test:
    name: Test & Coverage - Model Router
    runs-on: blacksmith-4vcpu-ubuntu-2404
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-groups

      - name: Run unit tests only
        run: uv run pytest adaptive_router/tests/unit/ --cov=adaptive_router --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          file: ${{ env.WORKING_DIR }}/coverage.xml
          flags: backend-python
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint & Format - Model Router
    runs-on: blacksmith-4vcpu-ubuntu-2404
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-groups

      - name: Run type checking
        run: uv run mypy .

      - name: Run linting
        run: uv run ruff check . --output-format=github

      - name: Check formatting
        run: uv run black . --check --diff --fast

  deploy-dev:
    name: Deploy Model Router - Development
    runs-on: blacksmith-4vcpu-ubuntu-2404
    needs: [test, lint]
    if: github.ref == 'refs/heads/dev' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    environment: development
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    env:
      MODAL_TOKEN_ID: ${{ secrets.MODAL_TOKEN_ID }}
      MODAL_TOKEN_SECRET: ${{ secrets.MODAL_TOKEN_SECRET }}
      MODAL_ENVIRONMENT: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup uv and Python for deployment
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: Install Dependencies
        run: |
          uv sync --all-groups

      - name: Deploy to Dev
        run: |
          echo "ðŸš€ Deploying Model Router to dev environment..."
          uv run modal deploy deploy.py
          echo "âœ… Deployment to dev completed"
