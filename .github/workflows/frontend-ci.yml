name: Frontend CI/CD

on:
  push:
    branches: [main, dev]
    paths:
      - "adaptive-app/**"
      - ".github/workflows/frontend-ci.yml"
      - ".github/scripts/**"
  pull_request:
    branches: [main, dev]
    paths:
      - "adaptive-app/**"
      - ".github/workflows/frontend-ci.yml"
      - ".github/scripts/**"
  workflow_dispatch:

env:
  WORKING_DIR: ./adaptive-app

jobs:
  quality:
    name: Quality Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ${{ env.WORKING_DIR }}/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate Prisma client
        run: bunx prisma generate --no-engine
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Type check
        run: bun run typecheck

      - name: Lint & format
        run: bun run check

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ${{ env.WORKING_DIR }}/node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Security audit
        run: bun audit

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [quality, security]
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.FRONTEND_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.FRONTEND_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.FRONTEND_AZURE_SUBSCRIPTION_ID }}

      - name: Build and Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}/adaptive-app
          registryUrl: llmadaptiveregistry.azurecr.io
          registryUsername: ${{ secrets.FRONTEND_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.FRONTEND_REGISTRY_PASSWORD }}
          containerAppName: frontend
          resourceGroup: adaptive
          imageToBuild: llmadaptiveregistry.azurecr.io/frontend${{ github.ref == 'refs/heads/dev' && '-dev' || '' }}:${{ github.sha }}
          buildArguments: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
