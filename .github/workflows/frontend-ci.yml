name: Frontend CI/CD

on:
  push:
    branches: [main]
    paths:
      - "adaptive-app/**"
      - ".github/workflows/frontend-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "adaptive-app/**"
      - ".github/workflows/frontend-ci.yml"
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SKIP_ENV_VALIDATION: true
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}

    # Set the working directory for all run commands in this job
    defaults:
      run:
        working-directory: ./adaptive-app

    # Grant permissions for Azure OIDC login
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./adaptive-app/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('./adaptive-app/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('./adaptive-app/bun.lock') }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate Prisma client
        run: bunx prisma generate

      - name: Run tests
        run: bun test --coverage

      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        with:
          directory: ./adaptive-app/coverage
          flags: frontend
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Biome (Lint & Format Check)
        run: bun run check

      - name: Type check
        run: bun run typecheck

      - name: Azure Login
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.FRONTEND_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.FRONTEND_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.FRONTEND_AZURE_SUBSCRIPTION_ID }}

      - name: Build and Deploy to Azure Container Apps
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}/adaptive-app
          dockerfilePath: Dockerfile
          registryUrl: adaptiveregistry.azurecr.io
          registryUsername: ${{ secrets.FRONTEND_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.FRONTEND_REGISTRY_PASSWORD }}
          containerAppName: frontend
          resourceGroup: adaptive
          imageToBuild: adaptiveregistry.azurecr.io/frontend:${{ github.sha }}
          # CRITICAL: Pass all required build arguments to your Dockerfile
          buildArguments: |
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
            ADAPTIVE_API_BASE_URL=${{ secrets.VITE_BASE_API_URL }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
