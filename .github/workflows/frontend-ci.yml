name: Frontend CI/CD (Azure Static Web Apps)

on:
  push:
    branches: [main]
    paths:
      - "adaptive-app/**"
      - ".github/workflows/frontend-ci.yml"
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main]
    paths:
      - "adaptive-app/**"
      - ".github/workflows/frontend-ci.yml"
  workflow_dispatch:

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    env:
      # Build-time environment variables for your Next.js app
      # These are used by the `bun run build` command
      SKIP_ENV_VALIDATION: true
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
      ADAPTIVE_API_BASE_URL: ${{ secrets.VITE_BASE_API_URL }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./adaptive-app/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('./adaptive-app/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile
        working-directory: ./adaptive-app

      - name: Generate Prisma client
        run: bunx prisma generate
        working-directory: ./adaptive-app

      - name: Run tests
        run: bun test --coverage
        working-directory: ./adaptive-app

      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        with:
          directory: ./adaptive-app/coverage
          flags: frontend
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Biome (Lint & Format Check)
        run: bun run check
        working-directory: ./adaptive-app

      - name: Type check
        run: bun run typecheck
        working-directory: ./adaptive-app

      - name: Build Application
        run: bun run build
        working-directory: ./adaptive-app

      - name: Build And Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          # This is the deployment token from your SWA resource in Azure
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_SMOKE_046A86703 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "./adaptive-app" # App source code path
          api_location: "" # No separate API folder
          # IMPORTANT: This points to the output of your `bun run build` command
          output_location: "out"

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DELIGHTFUL_SMOKE_046A86703 }}
          action: "close"
