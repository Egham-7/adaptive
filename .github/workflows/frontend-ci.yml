# GitHub Actions for Azure Web Apps Deploy: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and Deploy Adaptive App to Azure App Service

on:
  push:
    branches:
      - main
    paths:
      - "adaptive-app/**"
      - ".github/workflows/deploy-adaptive-app.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./adaptive-app/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('./adaptive-app/bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile
        working-directory: ./adaptive-app

      - name: Run tests
        run: bun test --coverage
        working-directory: ./adaptive-app

      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        with:
          directory: ./adaptive-app/coverage
          flags: frontend
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Biome (Lint & Format Check)
        run: bun run check
        working-directory: ./adaptive-app

      - name: Type check
        run: bun run typecheck
        working-directory: ./adaptive-app

      - name: Generate Prisma client (if applicable)
        run: bunx prisma generate
        working-directory: ./adaptive-app

      - name: Build Next.js application
        run: bun run build
        working-directory: ./adaptive-app
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }}
          ADAPTIVE_API_BASE_URL: ${{ secrets.VITE_BASE_API_URL }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          SKIP_ENV_VALIDATION: true

      # --- DEBUG STEP: Examine build output immediately after Next.js build ---
      # This step helps verify that `adaptive-app/build/standalone` contains everything needed.
      - name: Debug - List Build Output After Next.js Build
        run: |
          echo "Contents of adaptive-app/build after Next.js build:"
          ls -laR ./adaptive-app/build || echo "adaptive-app/build not found or empty."
          echo ""
          echo "Expected standalone path: ./adaptive-app/build/standalone"
          [ -d "./adaptive-app/build/standalone" ] && ls -laR ./adaptive-app/build/standalone || echo "standalone dir not found or empty."
        working-directory: . # Run from the root of the checkout
      # --- END DEBUG STEP ---

      # --- REMOVED STEP ---
      # The 'Prepare standalone artifact for deployment' step is REMOVED.
      # With `next.config.js` having `output: "standalone"`, Next.js automatically
      # copies the `public` directory and all necessary files into `build/standalone`.
      # Manually moving `static` or `public` after a standalone build is typically
      # unnecessary and can cause issues if paths are incorrect or redundant.
      # ---

      - name: Zip artifact for deployment
        # This step zips the contents of the `adaptive-app/build/standalone` directory.
        # The `release.zip` file will be created inside `./adaptive-app/build/standalone`.
        run: zip -r release.zip .
        working-directory: ./adaptive-app/build/standalone

      # --- DEBUG STEP:
