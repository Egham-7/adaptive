name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - "adaptive-backend/**"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    branches:
      - main
    paths:
      - "adaptive-backend/**"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/backend-ci.yml"
  workflow_dispatch:

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adaptive-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"
          cache: true
          cache-dependency-path: ./go.sum

      - name: Install dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m
          working-directory: ./adaptive-backend

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: backend
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build
        run: go build -v ./...

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test-lint
    defaults:
      run:
        working-directory: ./adaptive-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"
          cache: true
          cache-dependency-path: ./go.sum

      - name: Install dependencies
        run: go mod download

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Gosec Security Scanner
        run: gosec -exclude-dir=vendor -exclude-dir=.git -exclude-dir=testdata ./...

  deploy:
    runs-on: ubuntu-latest
    needs: [build-test-lint, security-scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.BACKEND_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.BACKEND_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.BACKEND_AZURE_SUBSCRIPTION_ID }}

      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}/adaptive-backend
          _dockerfilePathKey_: _dockerfilePath_
          registryUrl: llmadaptiveregistry.azurecr.io
          registryUsername: ${{ secrets.BACKEND_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.BACKEND_REGISTRY_PASSWORD }}
          containerAppName: backend
          resourceGroup: adaptive
          imageToBuild: llmadaptiveregistry.azurecr.io/backend:${{ github.sha }}
          _buildArgumentsKey_: |
            _buildArgumentsValues_
