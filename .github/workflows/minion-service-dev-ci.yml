name: Minion Service Dev CI/CD
on:
  push:
    branches: [dev]
    paths:
      - "minion-service/**"
      - ".github/workflows/minion-service-dev-ci.yml"
      - ".github/scripts/**"
  pull_request:
    branches: [dev]
    paths:
      - "minion-service/**"
      - ".github/workflows/minion-service-dev-ci.yml"
      - ".github/scripts/**"
  workflow_dispatch:
env:
  PYTHON_VERSION: "3.11"
  WORKING_DIR: "./minion-service"
jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true
      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.26
        with:
          cuda: "12.9.1"
          method: "network"
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - name: Run tests
        run: uv run pytest --cov=. --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          file: ${{ env.WORKING_DIR }}/coverage.xml
          flags: backend-python
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true
      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.26
        with:
          cuda: "12.9.1"
          method: "network"
      - name: Install dependencies
        run: uv sync --all-extras --dev
      - name: Run type checking
        run: uv run mypy .
      - name: Run linting
        run: uv run ruff check . --output-format=github
      - name: Check formatting
        run: uv run black . --check --diff
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/dev' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.MINIONSERVICEDEV_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.MINIONSERVICEDEV_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.MINIONSERVICEDEV_AZURE_SUBSCRIPTION_ID }}
      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v2
        with:
          appSourcePath: ${{ github.workspace }}/minion-service
          containerAppName: minion-service-dev
          resourceGroup: adaptive
          imageToBuild: llmadaptiveregistry.azurecr.io/minion-service-dev:${{ github.sha }}
          registryUrl: llmadaptiveregistry.azurecr.io
          registryUsername: ${{ secrets.MINIONSERVICEDEV_REGISTRY_USERNAME }}
          registryPassword: ${{ secrets.MINIONSERVICEDEV_REGISTRY_PASSWORD }}

