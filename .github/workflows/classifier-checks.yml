name: AI Service Checks

on:
  push:
    branches: [main]
    paths:
      - "adaptive_ai/**"
      - ".github/workflows/classifier-checks.yml"
      - "poetry.lock"
      - "pyproject.toml"
  pull_request:
    branches: [main]
    paths:
      - "adaptive_ai/**"
      - ".github/workflows/classifier-checks.yml"
      - "poetry.lock"
      - "pyproject.toml"
  workflow_dispatch:

jobs:
  test-lint-typecheck:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adaptive_ai

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: ./adaptive_ai/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('./adaptive_ai/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install project
        run: poetry install --no-interaction --no-root

      - name: Run tests with coverage
        id: tests
        run: poetry run pytest --cov=. --cov-report=xml
        continue-on-error: true

      - name: Upload test coverage
        if: always() && steps.tests.outcome == 'success'
        uses: codecov/codecov-action@v4
        with:
          file: ./adaptive_ai/coverage.xml
          flags: backend-python
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run type checking
        id: typecheck
        run: poetry run mypy .
        continue-on-error: true

      - name: Run linting with Ruff
        id: ruff
        run: poetry run ruff check . --output-format=github
        continue-on-error: true

      - name: Run code formatting check with Black
        id: black
        run: poetry run black . --check --diff
        continue-on-error: true

      - name: Check for failing steps
        if: always()
        run: |
          if [[ "${{ steps.tests.outcome }}" == "failure" || "${{ steps.typecheck.outcome }}" == "failure" || "${{ steps.ruff.outcome }}" == "failure" || "${{ steps.black.outcome }}" == "failure" || "${{ steps.security.outcome }}" == "failure" ]]; then
            echo "One or more checks failed!"
            exit 1
          fi

  docker:
    runs-on: ubuntu-latest
    needs: test-lint-typecheck
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./adaptive_ai
          file: ./adaptive_ai/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/adaptive-ai:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/adaptive-ai:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/adaptive-ai:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/adaptive-ai:buildcache,mode=max

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name adaptive-ai \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --image ${{ secrets.DOCKERHUB_USERNAME }}/adaptive-ai:${{ github.sha }} \
            --revision-suffix ${{ github.sha }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
