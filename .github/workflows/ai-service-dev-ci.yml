name: AI Service Dev CI/CD

on:
  push:
    branches: [dev]
    paths:
      - "adaptive_ai/**"
      - ".github/workflows/ai-service-dev-ci.yml"
      - ".github/scripts/**"
  pull_request:
    branches: [dev]
    paths:
      - "adaptive_ai/**"
      - ".github/workflows/ai-service-dev-ci.yml"
      - ".github/scripts/**"
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  WORKING_DIR: "./adaptive_ai"

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras --dev --group test

      - name: Run unit tests only
        run: make test-unit

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          file: ${{ env.WORKING_DIR }}/coverage.xml
          flags: backend-python
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras --dev

      - name: Run type checking
        run: uv run mypy .

      - name: Run linting
        run: uv run ruff check . --output-format=github

      - name: Check formatting
        run: uv run black . --check --diff --fast

