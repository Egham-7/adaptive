name: Backend CI

on:
  push:
    branches: [main]
    paths:
      - "adaptive-backend/**"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/backend-checks.yml"

  pull_request:
    branches: [main]
    paths:
      - "adaptive-backend/**"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/backend-checks.yml"

  workflow_dispatch:

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adaptive-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.6"
          cache: true
          cache-dependency-path: ./go.sum

      - name: Install dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          working-directory: ./adaptive-backend
          args: --timeout=5m
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          flags: backend
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build
        run: go build -v ./...

  security-scan:
    runs-on: ubuntu-latest
    needs: build-test-lint
    defaults:
      run:
        working-directory: ./adaptive-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.6"
          cache: true
          cache-dependency-path: ./go.sum

      - name: Install dependencies
        run: go mod download

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Gosec Security Scanner
        run: gosec -exclude-dir=vendor -exclude-dir=.git -exclude-dir=testdata ./...

      - name: Run govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: "1.23.6"
          go-package: ./adaptive-backend/...

  docker:
    runs-on: ubuntu-latest
    needs: [build-test-lint, security-scan]
    if: github.ref == 'refs/heads/main' # Only run on main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./adaptive-backend
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/adaptive-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/adaptive-backend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/adaptive-backend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/adaptive-backend:buildcache,mode=max
