[project]
name = "adaptive-analysis"
version = "0.1.0"
description = "Analysis tools and pipelines for the Adaptive project"
authors = [{ name = "Adaptive Team", email = "team@adaptive.com" }]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "pandas>=2.0.0,<3.0.0",
  "matplotlib>=3.7.0,<4.0.0",
  "numpy>=1.24.0,<2.0.0",
  "requests>=2.31.0,<3.0.0",
  "tqdm>=4.65.0,<5.0.0",
  "plotly>=5.15.0,<6.0.0",
  "seaborn>=0.12.0,<1.0.0",
  "jupyter>=1.0.0,<2.0.0",
  "pydantic>=2.0.0,<3.0.0"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.0.0,<9.0.0",
  "pytest-cov>=4.0.0,<5.0.0",
  "mypy>=1.15.0,<2.0.0",
  "black>=25.0.0,<26.0.0",
  "ruff>=0.11.0,<0.12.0",
  "types-requests>=2.31.0,<3.0.0",
  "pandas-stubs>=2.0.0,<3.0.0",
  "types-tqdm>=4.65.0,<5.0.0"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "adaptive-analysis"
version = "0.1.0"
description = "Analysis tools and pipelines for the Adaptive project"
authors = ["Adaptive Team <team@adaptive.com>"]
readme = "README.md"
packages = [{include = "cost_analysis"}]

[tool.poetry.dependencies]
python = "^3.12"
pandas = "^2.0.0"
matplotlib = "^3.7.0"
numpy = "^1.24.0"
requests = "^2.32.4"
tqdm = "^4.65.0"
plotly = "^5.15.0"
seaborn = "^0.12.0"
jupyter = "^1.0.0"
pydantic = "^2.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.0.0"
mypy = "^1.15.0"
black = "^25.0.0"
ruff = "^0.11.0"
types-requests = "^2.31.0"
pandas-stubs = "^2.0.0"
types-tqdm = "^4.65.0"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=cost_analysis",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]